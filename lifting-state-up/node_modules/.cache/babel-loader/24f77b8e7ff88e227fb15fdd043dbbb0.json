{"ast":null,"code":"import _classCallCheck from \"/home/thaont/Documents/react/lifting-state-up/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/thaont/Documents/react/lifting-state-up/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/thaont/Documents/react/lifting-state-up/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/thaont/Documents/react/lifting-state-up/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/thaont/Documents/react/lifting-state-up/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/thaont/Documents/react/lifting-state-up/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/thaont/Documents/react/lifting-state-up/src/component/Calculator.js\";\nimport React, { Component } from \"react\";\nimport TemperatureInput from \"./TemperatureInput\";\n\nvar Calculator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calculator, _Component);\n\n  function Calculator(props) {\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calculator).call(this, props));\n    _this.state = {\n      tem: '',\n      scale: 'c'\n    };\n    _this.handleCelsiusChange = _this.handleCelsiusChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFahChange = _this.handleFahChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calculator, [{\n    key: \"handleCelsiusChange\",\n    value: function handleCelsiusChange(tem) {\n      this.setState({\n        scale: 'c',\n        tem: tem\n      });\n    }\n  }, {\n    key: \"handleFahChange\",\n    value: function handleFahChange(tem) {\n      this.setState({\n        scale: 'f',\n        tem: tem\n      });\n    }\n  }, {\n    key: \"toCelsius\",\n    value: function toCelsius(fah) {\n      return (fah - 32) * 5 / 9;\n    }\n  }, {\n    key: \"toFah\",\n    value: function toFah(cel) {\n      return cel * 9 / 5 + 32;\n    }\n  }, {\n    key: \"tryConvert\",\n    value: function tryConvert(tem, convert) {\n      var input = parseFloat(tem);\n\n      if (Number.isNaN(input)) {\n        return '';\n      }\n\n      var output = convert(input);\n      var rounded = Math.round(output * 1000) / 1000;\n      return rounded.toString();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scale = this.props.scale;\n      var tem = this.state.tem; // const cel = scale === 'c'\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(TemperatureInput, {\n        scale: scale.c,\n        onTemChange: this.handleCelsiusChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(TemperatureInput, {\n        scale: scale.f,\n        onTemChange: this.handleFahChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calculator;\n}(Component);\n\nexport default Calculator;","map":{"version":3,"sources":["/home/thaont/Documents/react/lifting-state-up/src/component/Calculator.js"],"names":["React","Component","TemperatureInput","Calculator","props","state","tem","scale","handleCelsiusChange","bind","handleFahChange","setState","fah","cel","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","c","f"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,EADM;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAIA,UAAKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBC,IAAzB,uDAA3B;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,uDAAvB;AAPiB;AAQlB;;;;wCAEmBH,G,EAAK;AACvB,WAAKK,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAC,GADM;AAEZD,QAAAA,GAAG,EAAHA;AAFY,OAAd;AAID;;;oCAEeA,G,EAAK;AACnB,WAAKK,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAE,GADK;AAEZD,QAAAA,GAAG,EAAHA;AAFY,OAAd;AAID;;;8BAESM,G,EAAK;AACb,aAAO,CAACA,GAAG,GAAG,EAAP,IAAa,CAAb,GAAgB,CAAvB;AACD;;;0BAEKC,G,EAAK;AACT,aAAQA,GAAG,GAAG,CAAN,GAAQ,CAAT,GAAc,EAArB;AACD;;;+BAEUP,G,EAAKQ,O,EAAS;AACvB,UAAMC,KAAK,GAAGC,UAAU,CAACV,GAAD,CAAxB;;AACA,UAAGW,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAH,EAAwB;AACtB,eAAO,EAAP;AACD;;AACD,UAAMI,MAAM,GAAGL,OAAO,CAACC,KAAD,CAAtB;AACA,UAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAE,IAAnB,IAA0B,IAA1C;AACA,aAAOC,OAAO,CAACG,QAAR,EAAP;AACD;;;6BAEQ;AAAA,UACAhB,KADA,GACS,KAAKH,KADd,CACAG,KADA;AAAA,UAEAD,GAFA,GAEO,KAAKD,KAFZ,CAEAC,GAFA,EAGP;;AAEA,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAIC,KAAK,CAACiB,CADjB;AAEE,QAAA,WAAW,EAAI,KAAKhB,mBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAIC,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAID,KAAK,CAACkB,CADjB;AAEE,QAAA,WAAW,EAAI,KAAKf,eAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJD,CADD;AAUD;;;;EA1DsBT,S;;AA6DzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport TemperatureInput from \"./TemperatureInput\";\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tem: '',\n      scale: 'c'\n    };\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahChange = this.handleFahChange.bind(this);\n  }\n\n  handleCelsiusChange(tem) {\n    this.setState({\n      scale:'c',\n      tem\n    })\n  }\n\n  handleFahChange(tem) {\n    this.setState({\n      scale: 'f',\n      tem\n    })\n  }\n\n  toCelsius(fah) {\n    return (fah - 32) * 5 /9;\n  }\n\n  toFah(cel) {\n    return (cel * 9/5) + 32;\n  }\n\n  tryConvert(tem, convert) {\n    const input = parseFloat(tem);\n    if(Number.isNaN(input)) {\n      return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output *1000)/ 1000;\n    return rounded.toString();\n  }\n  \n  render() {\n    const {scale} = this.props;\n    const {tem} = this.state;\n    // const cel = scale === 'c'\n    \n    return (\n     <div>\n      <TemperatureInput \n        scale = {scale.c}\n        onTemChange = {this.handleCelsiusChange} />\n      <TemperatureInput \n        scale = {scale.f} \n        onTemChange = {this.handleFahChange}/>\n     </div>\n    );\n  }\n}\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}